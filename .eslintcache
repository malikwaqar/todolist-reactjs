[{"G:\\ReactJS\\todolist-reactjs\\src\\index.js":"1","G:\\ReactJS\\todolist-reactjs\\src\\reportWebVitals.js":"2","G:\\ReactJS\\todolist-reactjs\\src\\App.js":"3","G:\\ReactJS\\todolist-reactjs\\src\\components\\TodoForm.js":"4","G:\\ReactJS\\todolist-reactjs\\src\\components\\TodoList.js":"5","G:\\ReactJS\\todolist-reactjs\\src\\components\\Todo.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1536,"mtime":1608251480259,"results":"10","hashOfConfig":"8"},{"size":1204,"mtime":1608290424216,"results":"11","hashOfConfig":"8"},{"size":496,"mtime":1608291446239,"results":"12","hashOfConfig":"8"},{"size":926,"mtime":1608291519299,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ugokwf",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\ReactJS\\todolist-reactjs\\src\\index.js",[],["28","29"],"G:\\ReactJS\\todolist-reactjs\\src\\reportWebVitals.js",[],"G:\\ReactJS\\todolist-reactjs\\src\\App.js",["30"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filter, setFilter] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilter(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilter(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilter(todos);\n    }\n  };\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n  return (\n    <div className=\"app\">\n      <header>\n        <h3>What's going on?</h3>\n      </header>\n      <TodoForm\n        todos={todos}\n        setTodos={setTodos}\n        input={input}\n        setInput={setInput}\n        setStatus={setStatus}\n      />\n      <TodoList todos={todos} setTodos={setTodos} filter={filter} />\n    </div>\n  );\n}\n\nexport default App;\n","G:\\ReactJS\\todolist-reactjs\\src\\components\\TodoForm.js",[],"G:\\ReactJS\\todolist-reactjs\\src\\components\\TodoList.js",[],"G:\\ReactJS\\todolist-reactjs\\src\\components\\Todo.js",["31","32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":18,"column":6,"nodeType":"39","endLine":18,"endColumn":21,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"41","severity":1,"message":"45","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":16},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["48"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'TodoForm' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"51","text":"52"},[477,492],"[todos, status, filterHandler, saveLocalTodos]"]